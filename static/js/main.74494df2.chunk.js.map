{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredPrice","setEnteredPrice","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","price","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","items","filter","expensesContent","length","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waA8EeA,EA1EK,SAACC,GACnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KA+BA,OACE,uBAAMC,SAhBc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBC,MAAOV,EACPW,MAAOT,EACPU,KAAM,IAAIC,KAAKT,IAGjBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAgB,IAChBE,EAAe,KAIf,UACE,sBAAKU,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,KAAK,OACLC,MAAOjB,EACPkB,SApCiB,SAACX,GAC1BN,EAAgBM,EAAMY,OAAOF,aAsCzB,sBAAKF,UAAU,uBAAf,UACE,2CACA,uBACEC,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOf,EACPgB,SA1CkB,SAACX,GAC3BJ,EAAgBI,EAAMY,OAAOF,aA4CzB,sBAAKF,UAAU,uBAAf,UACE,yCACA,uBACEC,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOb,EACPc,SAhDgB,SAACX,GACzBF,EAAeE,EAAMY,OAAOF,gBAmD1B,sBAAKF,UAAU,uBAAf,UACE,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,SAArC,oBACA,wBAAQR,KAAK,SAAb,gCChCOS,G,MAnCI,SAAC3B,GAClB,MAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKZ,UAAU,cAAf,WACIW,GACA,wBAAQH,QAXc,WAC1BI,GAAa,IAUT,6BAEDD,GACC,cAAC,EAAD,CACEZ,kBAxBuB,SAACc,GAC9B,IAAMnB,EAAW,2BACZmB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBlC,EAAMmC,aAAaxB,GACnBkB,GAAa,IAmBPH,SAZmB,WACzBG,GAAa,W,MCdFO,MANf,SAAepC,GACX,IAAMqC,EAAU,QAAUrC,EAAMiB,UAChC,OACI,qBAAKA,UAAYoB,EAAjB,SAA2BrC,EAAMsC,Y,MCWzBC,MAbhB,SAAqBvC,GACjB,IAAMwC,EAAQxC,EAAMc,KAAK2B,eAAe,QAAQ,CAACD,MAAQ,SACnDE,EAAM1C,EAAMc,KAAK2B,eAAe,QAAS,CAAEC,IAAM,YACjDC,EAAO3C,EAAMc,KAAK8B,cAExB,OACA,eAAC,EAAD,CAAM3B,UAAU,eAAhB,UACI,qBAAKA,UAAU,sBAAf,SAAsCuB,IACtC,qBAAKvB,UAAU,qBAAf,SAAqC0B,IACrC,qBAAK1B,UAAU,oBAAf,SAAoCyB,QCM7BG,G,MAZK,SAAC7C,GACnB,OACE,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACzB,sBAAKG,UAAU,4BAAf,UACE,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,iBCYtCiC,G,MApBQ,SAAC9C,GAKtB,OACE,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQE,MAAOnB,EAAM+C,SAAU3B,SARP,SAACX,GAC7BT,EAAMgD,eAAevC,EAAMY,OAAOF,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,eCOK8B,G,MApBE,SAACjD,GAChB,IAAIkD,EAAgB,KAMpB,OAJIlD,EAAMmD,SAAW,IACnBD,EAAgBlB,KAAKoB,MAAOpD,EAAMmB,MAAQnB,EAAMmD,SAAY,KAAO,KAInE,sBAAKlC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVoC,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKjC,UAAU,mBAAf,SAAmCjB,EAAMuD,aCIhCC,G,MAlBD,SAACxD,GACb,IAAMyD,EAAkBzD,EAAM0D,WAAWC,KAAI,SAAAC,GAAS,OAAIA,EAAUzC,SAC9D0C,EAAe7B,KAAKR,IAAL,MAAAQ,KAAI,YAAQyB,IAEjC,OACE,qBAAKxC,UAAU,QAAf,SACGjB,EAAM0D,WAAWC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEEzC,MAAOyC,EAAUzC,MACjBgC,SAAUU,EACVN,MAAOK,EAAUL,OAHZK,EAAUL,cCeVO,EAxBO,SAAC9D,GACrB,IAD+B,EACzB+D,EAAkB,CACtB,CAAER,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,GACvB,CAAEoC,MAAO,MAAOpC,MAAO,IAbM,cAgBTnB,EAAMgE,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BC,EAA2B,QAEpCF,EADqBE,EAAQnD,KAAKoD,YACJ/C,OAAS8C,EAAQpD,OAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAO6C,WAAYK,KCkBbI,EAnCE,SAACnE,GAChB,MAAwCC,mBAAS,QAAjD,mBAAOmE,EAAP,KAAqBC,EAArB,KAKMC,EAAmBtE,EAAMuE,MAAMC,QAAO,SAAAP,GAC1C,OAAOA,EAAQnD,KAAK8B,cAAcV,aAAakC,KAG7CK,EAAkB,kDAWtB,OAVGH,EAAiBI,OAAO,IACrBD,EAAkBH,EAAiBX,KAAI,SAACM,GAAD,OACnC,cAAC,EAAD,CAEErD,MAAOqD,EAAQrD,MACfC,MAAOoD,EAAQpD,MACfC,KAAMmD,EAAQnD,MAHTmD,EAAQlC,QAQvB,8BACE,eAAC,EAAD,CAAMd,UAAU,WAAhB,UACE,cAAC,EAAD,CACE8B,SAAUqB,EACVpB,eAvBoB,SAAC2B,GAC3BN,EAAgBM,MAwBZ,cAAC,EAAD,CAAeX,SAAYM,IAC1BG,QChCHG,EAAiB,CACrB,CACE7C,GAAI,KACJnB,MAAO,eACPC,MAAO,MACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEgB,GAAI,KAAMnB,MAAO,SAAUC,MAAO,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,KACpE,CACEgB,GAAI,KACJnB,MAAO,gBACPC,MAAO,OACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAI,KACJnB,MAAO,oBACPC,MAAO,IACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,MA6Bb8D,EAzBH,WACV,MAAgC5E,mBAAS2E,GAAzC,mBAAOZ,EAAP,KAAiBc,EAAjB,KAgBA,OACE,sBAAK7D,UAAU,aAAf,UACE,cAAC,EAAD,CAAYkB,aAfU,SAAC8B,GACzBa,GAAY,SAACC,GACX,MAAM,CAAEd,GAAR,mBAAoBc,UAcpB,cAAC,EAAD,CAAUR,MAAOP,QCnCRgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74494df2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredPrice, setEnteredPrice] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n \r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredPrice(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      price: enteredPrice,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredPrice('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredPrice}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import './Card.css';\r\n\r\nfunction Card (props){\r\n    const classes = 'Card ' + props.className;\r\n    return (\r\n        <div className= {classes}>{props.children}</div>\r\n    );\r\n}\r\nexport default Card;","import Card from '../UI/Card';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month : 'long'});\r\n    const day = props.date.toLocaleString('en-US', { day : '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n    <Card className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </Card>\r\n    )\r\n}\r\n export default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.price}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.price;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter(expense =>{\r\n    return expense.date.getFullYear().toString()===filteredYear;\r\n  });\r\n  \r\n  let expensesContent = <p>No content Found!</p>\r\n  if(filteredExpenses.length>0){\r\n        expensesContent = filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              price={expense.price}\r\n              date={expense.date}\r\n            />\r\n          ));\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses = {filteredExpenses}/>\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\nimport './App.css'\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    price: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', price: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    price: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    price: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  \n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div className=\"App-header\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}